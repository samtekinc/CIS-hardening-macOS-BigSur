- name: Get Users
  shell: dscl . list /Users | grep -v '^_' | grep -v 'daemon' | grep -v 'nobody' | grep -v 'root'
  register: local_users

- name: Bluetooth Power state
  shell: defaults read /Library/Preferences/com.apple.Bluetooth ControllerPowerState
  register: bt_power

#This check will be updated in v1.3.0. See: https://workbench.cisecurity.org/tickets/13360
- name: Bluetooth Paired Devices
  shell: system_profiler SPBluetoothDataType | grep "Bluetooth:" -A 20 | grep Connectable
  register: bt_datatype

- name: FileVault Status
  shell: fdesetup status
  register: filevault_status

- name: Top Left Corner Value
  shell: defaults read com.apple.dock wvous-tl-corner
  ignore_errors: yes
  register: cornerone

- name: Bottom Left Corner Value
  shell: defaults read com.apple.dock wvous-bl-corner
  ignore_errors: yes
  register: cornertwo

- name: Top Right Corner Value
  shell: defaults read com.apple.dock wvous-tr-corner
  ignore_errors: yes
  register: cornerthree

- name: Bottom Right Corner Value
  shell: defaults read com.apple.dock wvous-br-corner
  ignore_errors: yes
  register: cornerfour

- name: Fix Top Left Corner
  shell: defaults write com.apple.dock wvous-tl-corner -int 0
  register: corneronefix

- name: Fix Bottom Left Corner 
  shell: defaults write com.apple.dock wvous-bl-corner -int 0 
  register: cornertwofix 

- name: Fix Top Right Corner 
  shell: defaults write com.apple.dock wvous-tr-corner -int 0 
  register: cornerthreefix

- name: Fix Bottom Right Corner 
  shell: defaults write com.apple.dock wvous-br-corner -int 10
  register: cornerfourfix

- name: 2.1.1 Turn off Bluetooth, if no paired devices exist
  shell: defaults write /Library/Preferences/com.apple.Bluetooth ControllerPowerstate -int 0 & killall -HUP blued
  when: bt_power.stdout|int == 1 and bt_datatype.stdout == "Connectable{{':'}} No."

- name: 2.1.2 Show Bluetooth status in menu bar 
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults -currentHost write com.apple.controlcenter.plist Bluetooth -int 18
  with_items: "{{ local_users.stdout_lines }}"

- name: "2.2.1 Enable Set time and date automatically"
  tags: level_1
  command: "{{ item }}"
  with_items:
    - systemsetup -setnetworktimeserver time.apple.com
    - systemsetup -setusingnetworktime on

- name: "2.2.2 Ensure time set is within appropriate limits"
  tags: level_1
  command: systemsetup -getnetworktimeserver

- name: "2.3.1 Set an inactivity interval of 20 minutes or less for the screen saver"
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults -currentHost write com.apple.screensaver idleTime -int 1200
  with_items: "{{ local_users.stdout_lines}}"

- name: 2.3.2 Secure screen saver corners (Top Left) 
  tags: level_2
  shell: | 
    su "{{ item }}" 
    corneronefix
  with_items: "{{ local_users.stdout_lines}}"
  when: cornerone|int == 6 or cornerone.rc == 1

- name: 2.3.2 Secure screen saver corners (Bottom Left)
  tags: level_2
  shell: |
    su "{{ item }}"
    cornertwofix
  with_items: "{{ local_users.stdout_lines}}"
  when: cornertwo|int == 6 or cornertwo.rc == 1

- name: 2.3.2 Secure screen saver corners (Top Right)
  tags: level_2
  shell: |
    su "{{ item }}"
    cornerthreefix
  with_items: "{{ local_users.stdout_lines}}"
  when: cornerthree|int == 6 or cornerthree.rc == 1

- name: 2.3.2 Secure screen saver corners (Bottom Right)
  tags: level_2
  shell: |
    su "{{ item }}"
    cornerfourfix
  with_items: "{{ local_users.stdout_lines}}"
  when: cornerfour|int == 6 or cornerfour.rc == 1

- name: "2.4.1 Disable Removte Apple Events"
  tags: level_1
  command: systemsetup -setremoteappleevents off

- name: "2.4.2 Disable Internet Sharing"
  tags: level_1
  shell: defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int 0

- name: "2.4.3 Disable Screen Sharing"
  tags: level_1
  command: launchctl disable system/com.apple.screensharing

- name: "2.4.4 Disable printer Sharing"
  tags: level_1
  command: cupsctl --no-share-printers

#- name: "2.4.5 Disable Remote Login"
#  tags: level_1
#  command: yes | systemsetup -setremotelogin off

- name: "2.4.6 Disable DVD or CD Sharing"
  tags: level_1
  command: launchctl disable system/com.apple.ODSAgent

- name: 2.4.7 Disable Bluetooth Sharing
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults -currentHost write com.apple.Bluetooth PrefKeyServicesEnabled -bool false
  with_items: "{{ local_users.stdout_lines}}"

- name: "2.4.8 Disable File Sharing"
  tags: level_1
  command: launchctl unload -w /System/Library/LaunchDaemons/com.apple.smbd.plist

- name: "2.4.9 Disable Remote Management"
  tags: level_1
  command: /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -stop 

- name: 2.4.10 Disable Content Caching 
  tags: level_2
  command: AssetCacheManagerUtil deactivate

- name: 2.4.11 Disable Media Sharing
  tags: level_2
  shell: |
    su "{{ item }}"
    defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0
  with_items: "{{ local_users.stdout_lines }}"

- name: "2.4.12 Ensure AirDrop is Disabled"
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults write com.apple.NetworkBrowser DisableAirDrop -bool true
  with_items: "{{ local_users.stdout_lines }}"

- name: "2.5.1.1 Enable FileVault"
  tags: level_1
  command: fdsetup enable
  when: filevault_status.stdout == "FileVault is Off." 

- name: "2.5.2.1 Enable Gatekeeper"
  tags: level_1
  command: spctl --master-enable

- name: "2.5.2.2 Enable Firewall"
  tags: level_1
  shell: defaults write /Library/Preferences/com.apple.alf globalstate -int 2

- name: "2.5.2.3 Enable Firewall Stealth Mode"
  tags: level_1
  command: /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on

- name: 2.5.3 Enable Location Services 
  tags: level_2
  command: launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist

# 2.5.4 Monitor Location Services Access Has no set remediation and should be followed if applicable

- name: 2.5.5 Disable sending diagnostic and usage data to Apple
  tags: level_2
  shell: |
    defaults write /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false
    chmod 644 /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist
    chgrp admin /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory.plist

- name: 2.5.6 Limit Ad tracking and personalized Ads
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults -currentHost write /Users/$user/Library/Preferences/com.apple.Adlib.plist allowApplePersonalizedAdvertising -bool false
  with_items: "{{ local_users.stdout_lines }}"

# 2.6.1 iCloud configuration depends upon your organization's policies if applicable

# 2.6.2 iCloud keychain depends upon your organization's policies if applicable

# 2.6.3 iCloud Drive depends upon your organization's policies if applicable

#- name: 2.6.4 iCloud Drive Document and Desktop sync   
  #tags: level_2
  #command: 
# 2.6.4 requires UI scripting

# 2.7.1 Time Machine Auto-Backup requires specific volume names that can vary across machines in order to function

- name: "2.8 Disable Wake for network access"
  tags: level_1
  command: pmset -a womp 0

- name: "2.9 Disable Power Nap"
  tags: level_1
  command: pmset -a powernap 0 

- name: 2.10 Enable Secure Keyboard Entry in terminal.app
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults write -app Terminal SecureKeyboardEntry -bool true
  with_items: "{{ local_users.stdout_lines }}"

- name: 2.12 Automatic Actions for Optical Media 
  tags: level_1
  shell: |
    su "{{ item.0 }}"
    defaults write /Users/$user/Library/Preferences/com.apple.digihub "{{ item.1 }}" -dict action 1
  with_nested:
    - "{{ local_users.stdout_lines }}"
    - ["com.apple.digihub.blank.cd.appeared", "com.apple.digihub.blank.dvd.appeared", "com.apple.digihub.cd.music.appeared", "com.apple.digihub.cd.picture.appeared", "com.apple.digihub.dvd.video.appeared"]

- name: 2.13 Review Siri Settings
  tags: level_1
  shell: |
    su "{{ item }}"
    defaults write com.apple.assistant.support.plist 'Assistant Enabled' -bool false
    defaults write com.apple.Siri.plist LockscreenEnabled -bool false
    defaults write com.apple.Siri.plist StatusMenuVisible -bool false
    defaults write com.apple.Siri.plist VoiceTriggerUserEnabled -bool false
    killall -HUP cfprefsd
    killall SystemUIServer
  with_items: "{{ local_users.stdout_lines }}"
